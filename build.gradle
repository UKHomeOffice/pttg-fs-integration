buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.7"
    }
}


apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

group 'com.hod'
version '0.1.0-SNAPSHOT'

//mainClassName = "na"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = 'https://artifactory.digital.homeoffice.gov.uk/artifactory'
    publish {
        repository { // PUBLISH access used by Jenkins - do not publish to artifactory for local working, only to maven local
            repoKey = 'libs-snapshot-local'
            username = System.env.ARTIFACTORY_USER
            password = System.env.ARTIFACTORY_PASS
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "http://repo.spring.io/plugins-release" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencies {

    compile "org.codehaus.groovy:groovy-all:2.4.3"
    compile "org.json:json:20160212"

    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "org.slf4j:slf4j-parent:1.7.14"

    compile "com.fasterxml.jackson.core:jackson-annotations:2.7.4"
    compile "com.fasterxml.jackson.core:jackson-databind:2.7.4"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.4"

    compile "com.sun.jersey:jersey-client:1.19"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2"

    compile "org.springframework.retry:spring-retry:1.1.4.RELEASE"
    compile "org.aspectj:aspectjrt:1.8.9"
    compile "org.aspectj:aspectjweaver:1.8.9"

    compile 'com.fasterxml.jackson.module:jackson-module-scala_2.11:2.7.4'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'org.scala-lang:scala-library:2.11.8'

    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19:"
    testCompile 'org.assertj:assertj-core:3.4.1'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.7.2'

    testCompile "org.springframework:spring-test:4.3.3.RELEASE"
    testCompile "org.springframework.boot:spring-boot-starter-test:1.4.1.RELEASE"

    testCompile "com.jayway.restassured:json-schema-validator:2.9.0"
    testCompile "com.jayway.restassured:rest-assured:2.9.0"

    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
    testCompile "org.spockframework:spock-spring:1.1-groovy-2.4-rc-3"
    testCompile "cglib:cglib-nodep:3.2.1"
    testCompile "org.objenesis:objenesis:2.2"

    testCompile "info.cukes:cucumber-java:1.2.4"
    testCompile "info.cukes:cucumber-junit:1.2.4"
    testCompile "info.cukes:gherkin:2.12.2"
    testCompile "net.serenity-bdd:serenity-core:1.1.31"
    testCompile "net.serenity-bdd:serenity-cucumber:1.1.6"
    testCompile "net.serenity-bdd:serenity-junit:1.1.31"
    testCompile "net.serenity-bdd:serenity-spring:1.1.31"
    testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    testCompile "com.github.tomakehurst:wiremock:1.58"

    testCompile 'org.scala-lang:scala-library:2.11.8'
}


compileGroovy.dependsOn "compileScala"
compileTestGroovy.dependsOn "compileTestScala"


tasks.withType(JavaCompile) {
    options.fork = true  // Fork your compilation into a child process
    options.forkOptions.setMemoryMaximumSize("256m")
}

tasks.withType(GroovyCompile) {
    options.fork = true  // Fork your compilation into a child process
    options.forkOptions.setMemoryMaximumSize("256m")
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.with {
        force = true
        additionalParameters = ["-Xmax-classfile-name", "127"]
        forkOptions.setMemoryMaximumSize("256m")
    }
}

test {
    maxHeapSize = "256m"
}

tasks.withType(Jar) {
    manifest {
        attributes(
                'Implementation-Title': "${jar.baseName}",
                'Implementation-Version': version
        )
    }
}


